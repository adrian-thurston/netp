
lex
	literal `thread `message `packet `option `module
	literal `bool `string `int `uint `long `ulong `attribute
	literal `starts `sends `to `receives `show `store `kobj
	literal `debug `use `import `appid `list `caps `struct
	literal `: `; `{ `} `, `( `) `* `< `>

	token id /[_a-zA-Z][_a-zA-Z0-9]*/
	token string /'"' [^"]* '"'/
	token number /[0-9]+/

	ignore /[ \t\n\r]+/
	ignore /'#' [^\n]* '\r'/
end

lex
	literal `- -ni
	literal `-- -ni

	ignore /[ \t\n\r]+/
end

token short /[a-zA-Z]/
token long /[a-zA-Z][a-zA-Z\-]*/

def option_type
	[`bool]
|	[`string]
|	[`long]
|	[`string `list]

def option_spec
	Ind: int
	[`- short]
|	[`-- long]

def option_def
	[`option option_type id `: option_spec+`;]

def thread_def
	[`thread id `;]

def msg_field_type
	[`bool]
|	[`string]
|	[`long]
|	[id `*]

def msg_field_def
	[msg_field_type id `;]

def message_def
	[`message id `{ msg_field_def* `} `;]

def struct_field_type
	[`bool]
|	[`int]
|	[`uint]
|	[`long]
|	[`ulong]
|	[`string]

def struct_field_def
	Offset: int
	[struct_field_type id `;]

def struct_def
	[`struct id `{ struct_field_def* `} `;]

def list_type
	[`list `< id `>]

def pkt_field_type
	[`bool]
|	[`int]
|	[`uint]
|	[`long]
|	[`ulong]
|	[`string]
|	[list_type]

def pkt_field_def
	Offset: int
	[pkt_field_type id `;]

def packet_def
	[`packet id `{ pkt_field_def* `} `;]

def starts_decl
	[Owner: id `starts Thread: id `;]

def sends_to_decl
	[Sender: id `sends Message: id `to Receiver: id `;]

def sends_decl
	[Sender: id `sends Packet: id `;]

def receives_decl
	[Receiver: id `receives Packet: id `;]

def module_decl
	[`module id `;]

def attr_modifier
	[`show]
|	[`store]

def attr_arg_type
	[`bool]
|	[`string]
|	[`long]

def attr_arg
	[attr_arg_type id]

def attr_arg_list
	[attr_arg `, attr_arg_list]
|	[attr_arg]

def attr_arg_spec
	[`( List: attr_arg_list? `)]
|	[]

def attr_decl
	[`attribute attr_modifier+ id ArgSpec: attr_arg_spec `;]

def kobj_def
	[`kobj id `{ attr_decl* `} `;]

def debug_def
	[`debug id `;]

def use_decl
	[`use id string `;]

def appid_decl
	[`appid number `;]

def cap_list
	[id]
|	[cap_list `, id]

def caps_decl
	[`caps cap_list `;]

def definition
	[option_def]
|	[thread_def]
|	[struct_def]
|	[message_def]
|	[packet_def]
|	[starts_decl]
|	[sends_to_decl]
|	[sends_decl]
|	[receives_decl]
|	[module_decl]
|	[attr_decl]
|	[kobj_def]
|	[debug_def]
|	[use_decl]
|	[appid_decl]
|	[caps_decl]

def program
	[definition*]
