global OptAutomake: bool = false
global OptKernf: bool = false
global OptHelp: bool = false
global OptInputFn: str

namespace args

	lex
		literal `-
		token file /^('-'|0)(^0)*/
	end

	lex
		token single /[h]/
		token dash /'-'/

		literal `help `automake `kernf
	end

	def long
		[`automake]
	|	[`kernf]
	|	[`help]

	token word /(^0)+/
	token zero /0/

	def item
		[`- single* zero]
	|	[`- dash long zero]
	|	[file zero]

	def args 
		[item*]
end

void parseArgs()
{
	cons ArgParser: parser<args::args>[]

	# Parse the args and extract the result into Args.
	ArgV: list<str> = argv
	for A: str in ArgV
		send ArgParser [A '\0']
	Args: args::args = ArgParser.finish()

	if !Args {
		send stderr "genf: arg parsing failed
		exit(1)
	}

	# Process the args.
	for Item: args::item in Args {
		switch Item
		case ["--automake" args::zero] {
			OptAutomake = true
		}
		case ["--help" args::zero] {
			OptHelp = true
		}
		case ["--kernf" args::zero] {
			OptKernf = true
		}
		case [file zero] {
			OptInputFn = $Item.file
		}
	}
}
